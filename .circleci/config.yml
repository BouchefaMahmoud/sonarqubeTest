# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
 
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-analyze:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:latest
    steps:
      - checkout
      - run:
          name: Add .NET Core SDK tools to PATH
          command: echo 'export PATH="$PATH:/root/.dotnet/tools"' >> $BASH_ENV

      - run:
          name: Install SonarScanner for .NET Core
          command: |
            dotnet tool install --global dotnet-sonarscanner
            dotnet sonarscanner begin /k:"sonarqubeTest" /d:sonar.login=${SONAR_TOKEN} /d:sonar.host.url=https://sonarqube.mahmoudbouchefa.com
          environment:
            SONAR_TOKEN: sqp_d0bb4b53e655a22e93b535dd37c4ab9a2681489e
      - run:
          name: where is the project
          command: | 
            pwd
            ls ./MyApi
      - run:
          name: Build
          command: |
            dotnet nuget add source https://dotnet.myget.org/F/dotnet-core/api/v3/index.json -n dotnet-core
            dotnet nuget locals all --clear
            dotnet restore
            dotnet build /root/project/MyApi/MyApi.sln --no-restore --configuration Release
            
      - run:
          name: SonarQube analysis
          command: |
            dotnet sonarscanner end /d:sonar.login=${SONAR_TOKEN}

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-analyze

