# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
 
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    environment:
      image: ubuntu-2004:202202-01
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "MyApi/MyApi.csproj" }}
            - v1-dependencies-
      - run:
          name: Install Docker
          command: |
            apt-get update
            apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
            add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            apt-get update
            apt-get install -y docker-ce docker-ce-cli containerd.io

      - run:
          name: Log in to Docker registry
          command: echo "moudmah123" | docker login -u "666123456789" --password-stdin

      - run:
          name: Install SonarScanner for .NET Core
          command: |
            dotnet tool install --global dotnet-sonarscanner
            dotnet sonarscanner begin /k:"my-api" /d:sonar.login=${SONAR_TOKEN}
          environment:
            SONAR_TOKEN: sqp_d0bb4b53e655a22e93b535dd37c4ab9a2681489e

      - run:
          name: Build
          command: |
            dotnet build MyApi/MyApi.csproj --no-restore --configuration Release
      - run:
          name: Publish Artifact
          command: |
            dotnet publish MyApi/MyApi.csproj --no-restore --configuration Release --output ./publish
      - run:
          name: SonarQube analysis
          command: |
            dotnet sonarscanner end /d:sonar.login=${SONAR_TOKEN}
      - save_cache:
          key: v1-dependencies-{{ checksum "MyApi/MyApi.csproj" }}
          paths:
            - ~/.nuget/packages
            - ~/.local/share/NuGet/Cache

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
